
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author SOIB1A07
 */
public class procesadordetextos extends javax.swing.JFrame {

    static String portapapeles = "";

    /**
     * Creates new form procesadordetextos
     */
    public procesadordetextos() {
        initComponents();
    }

    public void abrirArchivo() {
        String aux = "";
        String texto = "";
        try {
            /**
             * llamamos el metodo que permite cargar la ventana
             */
            JFileChooser file = new JFileChooser();
            file.showOpenDialog(this);
            /**
             * abrimos el archivo seleccionado
             */
            File abre = file.getSelectedFile();

            /**
             * recorremos el archivo, lo leemos para plasmarlo en el area de
             * texto
             */
            if (abre != null) {
                FileReader archivos = new FileReader(abre);
                BufferedReader lee = new BufferedReader(archivos);
                while ((aux = lee.readLine()) != null) {
                    texto += aux + "\n";
                }
                lee.close();
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex + ""
                    + "\n Archivo, no encontrado",
                    "ADVERTENCIA!!!", JOptionPane.WARNING_MESSAGE);
        }
        jTextArea.setText(texto);   //El texto se almacena en el JTextArea
    }

    public void guardarArchivo() {
        try {
            String nombre = "";
            JFileChooser file = new JFileChooser();
            file.showSaveDialog(this);
            File guarda = file.getSelectedFile();

            if (guarda != null) {
                /*guardamos el archivo y le damos el formato directamente,
    * si queremos que se guarde en formato doc lo definimos como .doc*/
                FileWriter save = new FileWriter(guarda + ".txt");
                save.write(jTextArea.getText());
                save.close();
                JOptionPane.showMessageDialog(null,
                        "Archivo guardado",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,
                    "Su archivo, no se ha guardado",
                    "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }

    public void nuevoArchivo() {
        int decision = 0;
        decision = JOptionPane.showConfirmDialog(null, "¿Desea guardar los cambios?", "ATENCION", 1);

        if (decision == 0) {
            guardarArchivo();
        } else if (decision == 1) {
            jTextArea.setText("");
        }

    }

    public void contar() {
        int inicio = jTextArea.getSelectionStart();
        int fin = jTextArea.getSelectionEnd();
        String seleccion = jTextArea.getText().substring(inicio, fin);
        String[] palabras = seleccion.split("\\W+");
        int numero = palabras.length;

        JOptionPane.showMessageDialog(null, "Hay " + numero + " palabras.");
    }

    public void buscar() {
        int i = 0;
        String buscar = JOptionPane.showInputDialog("Introduzca palabra a buscar:");
        String texto = jTextArea.getText();
        String[] palabras = texto.split("\\W+");
        for (String p : palabras) {

            if (p.equalsIgnoreCase(buscar)) {
                i++;

            }

        }
        if (i != 0) {
            JOptionPane.showMessageDialog(null, "Existen " + i + " coincidencias.");
        } else {JOptionPane.showMessageDialog(null, "No hay resultados en la búsqueda");
        }
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuarchivo = new javax.swing.JMenu();
        Itemnuevo = new javax.swing.JMenuItem();
        Itemguardar = new javax.swing.JMenuItem();
        Itemabrir = new javax.swing.JMenuItem();
        jMenueditar = new javax.swing.JMenu();
        Itemcontar = new javax.swing.JMenuItem();
        Itemcopiar = new javax.swing.JMenuItem();
        Itempegar = new javax.swing.JMenuItem();
        ItemCortar = new javax.swing.JMenuItem();
        ItemBuscar = new javax.swing.JMenuItem();
        jMenuSalir = new javax.swing.JMenu();
        ItemSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        jMenuarchivo.setText("Archivo");

        Itemnuevo.setText("Nuevo");
        Itemnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemnuevoActionPerformed(evt);
            }
        });
        jMenuarchivo.add(Itemnuevo);

        Itemguardar.setText("Guardar");
        Itemguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemguardarActionPerformed(evt);
            }
        });
        jMenuarchivo.add(Itemguardar);

        Itemabrir.setText("Abrir");
        Itemabrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemabrirActionPerformed(evt);
            }
        });
        jMenuarchivo.add(Itemabrir);

        jMenuBar1.add(jMenuarchivo);

        jMenueditar.setText("Editar");

        Itemcontar.setText("Contar");
        Itemcontar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemcontarActionPerformed(evt);
            }
        });
        jMenueditar.add(Itemcontar);

        Itemcopiar.setText("Copiar");
        Itemcopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemcopiarActionPerformed(evt);
            }
        });
        jMenueditar.add(Itemcopiar);

        Itempegar.setText("Pegar");
        Itempegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItempegarActionPerformed(evt);
            }
        });
        jMenueditar.add(Itempegar);

        ItemCortar.setText("Cortar");
        ItemCortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemCortarActionPerformed(evt);
            }
        });
        jMenueditar.add(ItemCortar);

        ItemBuscar.setText("Buscar");
        ItemBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemBuscarActionPerformed(evt);
            }
        });
        jMenueditar.add(ItemBuscar);

        jMenuBar1.add(jMenueditar);

        jMenuSalir.setText("Salir");
        jMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSalirActionPerformed(evt);
            }
        });

        ItemSalir.setText("Salir");
        ItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemSalirActionPerformed(evt);
            }
        });
        jMenuSalir.add(ItemSalir);

        jMenuBar1.add(jMenuSalir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ItemabrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemabrirActionPerformed
        // TODO add your handling code here:
        abrirArchivo();

    }//GEN-LAST:event_ItemabrirActionPerformed

    private void jMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSalirActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_jMenuSalirActionPerformed

    private void ItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemSalirActionPerformed
        // TODO add your handling code here:
        int decision = 0;
        decision = JOptionPane.showConfirmDialog(null, "¿Desea guardar antes de salir?", "ATENCION", 1);

        if (decision == 0) {
            guardarArchivo();
            System.exit(0);
        } else if (decision == 1) {
            System.exit(0);
        }
    }//GEN-LAST:event_ItemSalirActionPerformed

    private void ItemguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemguardarActionPerformed
        // TODO add your handling code here:
        guardarArchivo();
    }//GEN-LAST:event_ItemguardarActionPerformed

    private void ItemnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemnuevoActionPerformed
        // TODO add your handling code here:
        nuevoArchivo();
    }//GEN-LAST:event_ItemnuevoActionPerformed

    private void ItempegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItempegarActionPerformed
        // TODO add your handling code here:
        jTextArea.paste();
    }//GEN-LAST:event_ItempegarActionPerformed

    private void ItemcopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemcopiarActionPerformed
        // TODO add your handling code here:
        jTextArea.copy();

    }//GEN-LAST:event_ItemcopiarActionPerformed

    private void ItemCortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemCortarActionPerformed
        // TODO add your handling code here:
        jTextArea.cut();
    }//GEN-LAST:event_ItemCortarActionPerformed

    private void ItemcontarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemcontarActionPerformed
        // TODO add your handling code here:
        contar();
    }//GEN-LAST:event_ItemcontarActionPerformed

    private void ItemBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemBuscarActionPerformed
        // TODO add your handling code here:
        buscar();
    }//GEN-LAST:event_ItemBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(procesadordetextos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(procesadordetextos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(procesadordetextos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(procesadordetextos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new procesadordetextos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ItemBuscar;
    private javax.swing.JMenuItem ItemCortar;
    private javax.swing.JMenuItem ItemSalir;
    private javax.swing.JMenuItem Itemabrir;
    private javax.swing.JMenuItem Itemcontar;
    private javax.swing.JMenuItem Itemcopiar;
    private javax.swing.JMenuItem Itemguardar;
    private javax.swing.JMenuItem Itemnuevo;
    private javax.swing.JMenuItem Itempegar;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuSalir;
    private javax.swing.JMenu jMenuarchivo;
    private javax.swing.JMenu jMenueditar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
